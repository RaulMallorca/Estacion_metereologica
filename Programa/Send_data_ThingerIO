/*
  Lectura de datos de temperatura y humedad con sensor DHT22, DHT11 y ldr con la placa
  NodeMCU. Monitorización en la plataforma www.thinger.io.
  Envío de email según declaremos en IFTTT

  Código parcial de:
  Dani No www.esploradores.com
  
*/

#include <ESP8266WiFi.h>       //Librería de conexión WiFi del módulo ESP8266
#include <ThingerESP8266.h>    //Librería de la plataforma thinger.io
#include "DHT.h"               //Librería de los sensores DHT11, DHT22, etc. 

// Parámetros del conexión con thinger.io
#define usuario "EstacionMeteo" //Nuestro usuario de Thinger.io
#define device_Id "NodeMCU_Light" //Poner el device_ID elegido en Thinger.io
#define device_credentials "qMw76EourWNP0G" //Poner nuestra device_credencials de Thinger.io

ThingerESP8266 thing(usuario, device_Id, device_credentials);

#define EMAIL_ENDPOINT "IFTTT"  //El endpoint se usa para integrar la plataforma thinger.io con servicios externos, en este caso, recibir notificación por email.

int Luminosidad;  //Nos servirá para activar el endpoint y recibir un email al guardar el valor de "luminosidad"

// Parámetros de conexión WiFi
const char WiFi_ssid[] = "RedWifi";             //Nombre de red
const char WiFi_password[] = "KirguisT@N2035";  //Clave de red

// Parámetros del DHT
#define DHT22PIN D4       //Pin de conexión - GPIO02
#define DHT22TYPE DHT22   //Modelo DHT22
#define DHT11PIN D5       //Pin de conexión - GPIO14
#define DHT11TYPE DHT11   //Modelo DHT11

DHT sensorDHT22 (DHT22PIN, DHT22TYPE);
DHT sensorDHT11 (DHT11PIN, DHT11TYPE);
int pinLDR = A0; //pin analógico donde está conectada la LDR

void setup() {
  sensorDHT22.begin();  // Inicialización del DHT22
  sensorDHT11.begin();  // Inicialización del DHT11

  thing.add_wifi(WiFi_ssid, WiFi_password); // Inicialización de la WiFi para comunicarse con la API

  // Inicialización de la lectura de datos desde la API
  //El tipo de datos pson puede contener diferentes tipos de datos, se usa para recibir múltiples valroes al mismo tiempo
  thing["sensores"] >> [](pson & out) { //Nombre del recurso que elegiremos en el bucket de Thinger.io
    out["Temperatura_DHT22"] = sensorDHT22.readTemperature(); //Nombre del campo para trazar asociado a la temperatura del DHT22
    out["Humedad_DHT22"] = sensorDHT22.readHumidity();  //Nombre del campo para trazar asociado a la humedad del DHT22
    out["Temperatura_DHT11"] = sensorDHT11.readTemperature(); //Nombre del campo para trazar asociado a la temperatura del DHT11
    out["Humedad_DHT11"] = sensorDHT11.readTemperature(); //Nombre del campo para trazar asociado a la humedad del DHT11
    out["Luminosidad"] = analogRead (pinLDR); //Nombre del campo para trazar asociado a la luminosidad de la ldr
  };

  //Usamos la condición if para llamar el endpoint si la luminosidad supera al valor de 200
  if (Luminosidad > 200) {
    thing.call_endpoint (EMAIL_ENDPOINT,"sensores");
  }
  Serial.println ("Enviando email");
}
